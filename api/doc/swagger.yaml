openapi: 3.0.0
info:
  title: Python Web Service Demo
  description: A simple demonstration web service app with Python and Flask.
  version: 1.1.0
paths:
  /:
    get:
      description: Prints a simple "Hello World" message.
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                type: string
                example: <h1>Hello World!</h1>
  /{name}:
    get:
      description: Prints a personalized greeting with the name provided by <name>.
      parameters:
        - name: name
          in: path
          required: true
          description: The name to be used for the greeting.
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: Hello, Lulu!
  /json:
    get:
      description: Returns a test JSON response.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: Chan Tai Man
                  is_alive:
                    type: boolean
                    example: true
                  age:
                    type: integer
                    example: 56
                  work_days:
                    type: array
                    items:
                      type: string
                    example: [ Monday, Tuesday, Wednesday ]
  /timestwo:
    post:
      description: Multiplies a given number by 2.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                num:
                  type: integer
                  example: 3
              required:
                - num
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  num:
                    type: integer
                    example: 3
                  result:
                    type: integer
                    example: 6
        400:
          description: |
            Bad request. "num" must exist in the request parameters and its value must be an integer. \
            The response body will be the error message.