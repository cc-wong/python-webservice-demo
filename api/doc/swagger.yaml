openapi: 3.0.0
info:
  title: Python Web Service Demo
  description: A simple demonstration web service app with Python and Flask.
  version: 1.1.0
paths:
  /:
    get:
      description: Prints a simple "Hello World" message.
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                type: string
                example: <h1>Hello World!</h1>
  /{name}:
    get:
      description: Prints a personalized greeting with the name provided by <name>.
      parameters:
        - name: name
          in: path
          required: true
          description: The name to be used for the greeting.
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: Hello, Lulu!
  /getWorkers:
    post:
      description: |
        Returns the list of workers configured in `data/worker_list.json`. \
        \
        If a non-empty list of day-of-week is passed in the request parameters,
        the list will include only workers whose work days include all of the defined days-of-week. \
        Accepted values: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY \
        \
        Otherwise, the whole list will be returned.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                work_days:
                  description: This function will return workers whose work days include every entry in this list.
                  type: array
                  items:
                    type: string
            examples:
              1 - Multiple entries:
                value:
                  work_days: ["MONDAY", "TUESDAY"]
              2 - Single entry:
                value:
                  work_days: ["SUNDAY"]
              3 - Empty list:
                value:
                  work_days: []
              4 - Empty JSON:
                value: {}
              5 - Invalid value:
                value:
                  work_days: ["MONDAY", "INVALID"]

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  workers:
                    description: List of workers
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          description: Full name
                          type: string
                        sex:
                          description: Sex (M/F)
                          type: string
                        is_reg_member:
                          description: Is registered member?
                          type: boolean
                        age:
                          description: Worker's age
                          type: integer
                        work_days:
                          description: Worker's work days in a week
                          type: array
                          items:
                            type: string
              example:
                workers:
                  - name: Chan Tai Man
                    sex: M
                    is_reg_member: true
                    age: 56
                    work_days: [ Monday, Tuesday, Wednesday ]
                  - name: Ma Siu Ling
                    sex: F
                    is_reg_member: false
                    age: 44
                    work_days: [ Friday ]
        400:
          description: |
            Bad request. \
            The request parameter work_days includes an invalid value.
  /timestwo:
    post:
      description: Multiplies a given number by 2.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                num:
                  type: integer
                  example: 3
              required:
                - num
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  num:
                    type: integer
                    example: 3
                  result:
                    type: integer
                    example: 6
        400:
          description: |
            Bad request. "num" must exist in the request parameters and its value must be an integer. \
            The response body will be the error message.